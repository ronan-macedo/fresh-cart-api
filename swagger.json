{
    "swagger": "2.0",
    "info": {
        "title": "FreshCart API",
        "version": "1.0.0",
        "description": "For login and logout the application simple use the following routes:\n /login \n /logout",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "{HOST_PLACEHOLDER}",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/membership": {
            "get": {
                "tags": [
                    "membership"
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoyaltyMembershipResponse"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "code": "cO2JskE6",
                                    "registrationDate": "2018-01-17",
                                    "lastPurchase": "2018-01-17",
                                    "purchaseHistory": [
                                        {
                                            "date": "2018-01-17",
                                            "amount": 64
                                        },
                                        {
                                            "date": "2018-01-17",
                                            "amount": 67
                                        }
                                    ],
                                    "points": 85,
                                    "active": true
                                },
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "code": "cO2JskE6",
                                    "registrationDate": "2018-01-17",
                                    "lastPurchase": "2018-01-17",
                                    "purchaseHistory": [
                                        {
                                            "date": "2018-01-17",
                                            "amount": 30
                                        },
                                        {
                                            "date": "2018-01-17",
                                            "amount": 59
                                        }
                                    ],
                                    "points": 36,
                                    "active": true
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get all memberships.",
                "description": "Get all memberships."
            },
            "post": {
                "tags": [
                    "membership"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Membership request.",
                        "schema": {
                            "$ref": "#/definitions/MembershipRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Success!"
                            }
                        }
                    }
                },
                "summary": "Activate or deactivate layalty membership.",
                "description": "Activate or deactivate layalty membership."
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "product"
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductResponse"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "name": "Some product",
                                    "description": "Some description",
                                    "category": "Some category",
                                    "brand": "Some brand",
                                    "quantity": 4,
                                    "price": 26.08,
                                    "pointPrice": 34
                                },
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "name": "Another product",
                                    "description": "Another description",
                                    "category": "Another category",
                                    "brand": "Another brand",
                                    "quantity": 96,
                                    "price": 77.34,
                                    "pointPrice": 76
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get all products.",
                "description": "Get all products."
            },
            "post": {
                "tags": [
                    "product"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Product request.",
                        "schema": {
                            "$ref": "#/definitions/ProductRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Created!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Register a product.",
                "description": "Register a product."
            }
        },
        "/customer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerResponse"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "email": "john.doe@email.com",
                                    "address": {
                                        "firstLine": "Main street 01",
                                        "lastLine": "Apt 4",
                                        "city": "Smalville"
                                    },
                                    "membershipCode": "cO2JskE6"
                                },
                                {
                                    "_id": "65a8747d7aaceb61d2c91cdb",
                                    "firstName": "John",
                                    "lastName": "Smith",
                                    "email": "john.smith@email.com",
                                    "address": {
                                        "firstLine": "Main street 02",
                                        "lastLine": "Apt 5",
                                        "city": "Smalville"
                                    },
                                    "membershipCode": "cO2Jske8"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get all customers.",
                "description": "Get all customers."
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Customer request.",
                        "schema": {
                            "$ref": "#/definitions/CustomerRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Created!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Register a customer.",
                "description": "Register a customer."
            }
        },
        "/customer/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/CustomerResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "65a8747d7aaceb61d2c91eab",
                                "firstName": "John",
                                "lastName": "Doe",
                                "email": "john.doe@email.com",
                                "address": {
                                    "firstLine": "Main street 01",
                                    "lastLine": "Apt 4",
                                    "city": "Smalville"
                                },
                                "membershipCode": "cO2JskE6"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get customer by Id.",
                "description": "Get customer by Id."
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "description": "Customer request.",
                        "schema": {
                            "$ref": "#/definitions/CustomerRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Updated successfully!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Edit a customer.",
                "description": "Edit customer."
            },
            "delete": {
                "tags": [
                    "customer"
                ],
                "responses": {
                    "204": {
                        "description": "No Content."
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Remove a customer.",
                "description": "Remove a customer."
            }
        },
        "/membership/{code}": {
            "get": {
                "tags": [
                    "membership"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/CustomerResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "65a8747d7aaceb61d2c91eab",
                                "firstName": "John",
                                "lastName": "Doe",
                                "email": "john.doe@email.com",
                                "address": {
                                    "firstLine": "Main street 01",
                                    "lastLine": "Apt 4",
                                    "city": "Smalville"
                                },
                                "membershipCode": "cO2JskE6"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get customer by membership code.",
                "description": "Get customer by membership code."
            },
            "delete": {
                "tags": [
                    "membership"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content."
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Remove membership.",
                "description": "Remove membership."
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/ProductResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "65a8747d7aaceb61d2c91eab",
                                "name": "Some product",
                                "description": "Some description",
                                "category": "Some category",
                                "brand": "Some brand",
                                "quantity": 4,
                                "price": 26.08,
                                "pointPrice": 34
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get product by Id.",
                "description": "Get product by Id."
            },
            "put": {
                "tags": [
                    "product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "description": "Customer request.",
                        "schema": {
                            "$ref": "#/definitions/CustomerRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Updated successfully!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Edit a product.",
                "description": "Edit a product."
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "responses": {
                    "204": {
                        "description": "No Content."
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Remove a product.",
                "description": "Remove a product."
            }
        },
        "/sale": {
            "get": {
                "tags": [
                    "sale"
                ],
                "parameters": [
                    {
                        "name": "startdate",
                        "description": "",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "enddate",
                        "description": "",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SaleResponse"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "_id": "65a8747d7aaceb61d2c91eab",
                                    "saleDate": "2018-01-17",
                                    "membershipCode": "cO2JskE6",
                                    "products": [
                                        {
                                            "name": "Some product",
                                            "quantity": 1,
                                            "price": 1.5
                                        },
                                        {
                                            "name": "Another product",
                                            "quantity": 1,
                                            "price": 1.5
                                        }
                                    ],
                                    "totalAmount": 3,
                                    "isCancelled": false
                                },
                                {
                                    "_id": "some text",
                                    "saleDate": "2018-01-17",
                                    "membershipCode": "some text",
                                    "products": [
                                        {
                                            "name": "some text",
                                            "quantity": 14,
                                            "price": 1.01
                                        },
                                        {
                                            "name": "some text",
                                            "quantity": 2,
                                            "price": 80.95
                                        }
                                    ],
                                    "totalAmount": 1,
                                    "isCancelled": true
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get sales.",
                "description": "Get sales."
            },
            "post": {
                "tags": [
                    "sale"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Product request.",
                        "schema": {
                            "$ref": "#/definitions/SaleRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Created!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Register a sale.",
                "description": "Register a sale."
            }
        },
        "/sale/{id}": {
            "get": {
                "tags": [
                    "sale"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/SaleResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "65a8747d7aaceb61d2c91eab",
                                "saleDate": "2018-01-17",
                                "membershipCode": "cO2JskE6",
                                "products": [
                                    {
                                        "name": "Some product",
                                        "quantity": 1,
                                        "price": 1.5
                                    },
                                    {
                                        "name": "Another product",
                                        "quantity": 1,
                                        "price": 1.5
                                    }
                                ],
                                "totalAmount": 3,
                                "isCancelled": false
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get sale by Id.",
                "description": "Get sale by Id."
            },
            "post": {
                "tags": [
                    "sale"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "description": "Sale cancellation request.",
                        "schema": {
                            "$ref": "#/definitions/SaleCancellationRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/ApiNotification"
                        },
                        "examples": {
                            "application/json": {
                                "message": "Cancelled!"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Cancelled a sale.",
                "description": "Cancelled a sale."
            }
        },
        "/customer/membership/{code}": {
            "get": {
                "tags": [
                    "membership"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/CustomerResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "65a8747d7aaceb61d2c91eab",
                                "firstName": "John",
                                "lastName": "Doe",
                                "email": "john.doe@email.com",
                                "address": {
                                    "firstLine": "Main street 01",
                                    "lastLine": "Apt 4",
                                    "city": "Smalville"
                                },
                                "membershipCode": "cO2JskE6"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ApiErrors"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "error": "Some error."
                                    },
                                    {
                                        "error": "Another error."
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Unauthorized!"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found.",
                        "examples": {
                            "application/json": {
                                "error": "Not found!"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Some error."
                            }
                        }
                    }
                },
                "summary": "Get customer by membership code.",
                "description": "Get customer by membership code."
            }
        }
    },
    "definitions": {
        "Address": {
            "title": "Address",
            "description": "Address.",
            "type": "object",
            "properties": {
                "firstLine": {
                    "type": "string"
                },
                "lastLine": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                }
            },
            "example": {
                "firstLine": "Main street 01",
                "lastLine": "Apt 1",
                "city": "Smalltown"
            }
        },
        "CustomerRequest": {
            "title": "CustomerRequest",
            "description": "Customer request.",
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "membership": {
                    "type": "boolean"
                }
            },
            "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "john.doe@email.com",
                "address": {
                    "firstLine": "Main street 01",
                    "lastLine": "Apt 4",
                    "city": "Smalville"
                },
                "membership": true
            }
        },
        "CustomerResponse": {
            "title": "CustomerResponse",
            "description": "Customer response.",
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "membershipCode": {
                    "description": "",
                    "type": "string"
                }
            },
            "example": {
                "_id": "65a8747d7aaceb61d2c91eab",
                "firstName": "John",
                "lastName": "Doe",
                "email": "john.doe@email.com",
                "address": {
                    "firstLine": "Main street 01",
                    "lastLine": "Apt 4",
                    "city": "Smalville"
                },
                "membershipCode": "cO2JskE6"
            }
        },
        "ApiError": {
            "title": "ApiError",
            "description": "Api error.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            },
            "example": {
                "error": "Some error."
            }
        },
        "ApiErrors": {
            "title": "ApiErrors",
            "description": "Api error list.",
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            },
            "example": {
                "errors": [
                    {
                        "error": "Some error."
                    },
                    {
                        "error": "Another error."
                    }
                ]
            }
        },
        "ApiNotification": {
            "title": "ApiNotification",
            "description": "Api notification message.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "example": {
                "message": "Success!"
            }
        },
        "LoyaltyMembershipResponse": {
            "title": "LoyaltyMembershipResponse",
            "description": "Loyalty membership response.",
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "registrationDate": {
                    "format": "date",
                    "type": "string"
                },
                "lastPurchase": {
                    "format": "date",
                    "type": "string"
                },
                "purchaseHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Purchase"
                    }
                },
                "points": {
                    "format": "int32",
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "example": {
                "_id": "65a8747d7aaceb61d2c91eab",
                "code": "cO2JskE6",
                "registrationDate": "2018-01-17",
                "lastPurchase": "2018-01-17",
                "purchaseHistory": [
                    {
                        "date": "2018-01-17",
                        "amount": 2
                    },
                    {
                        "date": "2018-01-17",
                        "amount": 28
                    }
                ],
                "points": 99,
                "active": true
            }
        },
        "MembershipRequest": {
            "title": "MembershipRequest",
            "description": "Membership request.",
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "string"
                },
                "membership": {
                    "type": "boolean"
                }
            },
            "example": {
                "customerId": "65a8747d7aaceb61d2c91eab",
                "membership": true
            }
        },
        "ProductRequest": {
            "title": "ProductRequest",
            "description": "Product request.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "price": {
                    "format": "double",
                    "type": "number"
                },
                "pointPrice": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "name": "Product 1",
                "description": "Product description",
                "category": "Some Category",
                "brand": "No brand",
                "quantity": 50,
                "price": 1.8,
                "pointPrice": 6
            }
        },
        "ProductResponse": {
            "title": "ProductResponse",
            "description": "Product response.",
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "price": {
                    "format": "double",
                    "type": "number"
                },
                "pointPrice": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "_id": "65a8747d7aaceb61d2c91eab",
                "name": "Product 1",
                "description": "Product description",
                "category": "Some Category",
                "brand": "No brand",
                "quantity": 50,
                "price": 1.8,
                "pointPrice": 6
            }
        },
        "Purchase": {
            "title": "Purchase",
            "description": "Purchase.",
            "type": "object",
            "properties": {
                "date": {
                    "format": "date",
                    "type": "string"
                },
                "amount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "date": "2018-01-17",
                "amount": 19
            }
        },
        "SaleRequest": {
            "title": "SaleRequest",
            "description": "Sale request.",
            "type": "object",
            "properties": {
                "membershipCode": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SaleProduct"
                    }
                },
                "totalAmount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "membershipCode": "cO2JskE6",
                "products": [
                    {
                        "name": "Sugar",
                        "quantity": 2,
                        "price": 1.5
                    }
                ],
                "totalAmount": 3
            }
        },
        "SaleCancellationRequest": {
            "title": "SaleCancellationRequest",
            "description": "",
            "type": "object",
            "properties": {
                "isCancelled": {
                    "type": "boolean"
                }
            },
            "example": {
                "isCancelled": true
            }
        },
        "SaleProduct": {
            "title": "SaleProduct",
            "description": "Sale product.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "price": {
                    "format": "double",
                    "type": "number"
                }
            },
            "example": {
                "name": "Sugar",
                "quantity": 2,
                "price": 1.5
            }
        },
        "SaleResponse": {
            "title": "SaleResponse",
            "description": "",
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "saleDate": {
                    "format": "date",
                    "type": "string"
                },
                "membershipCode": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SaleProduct"
                    }
                },
                "totalAmount": {
                    "format": "int32",
                    "type": "integer"
                },
                "isCancelled": {
                    "type": "boolean"
                }
            },
            "example": {
                "_id": "65a8747d7aaceb61d2c91eab",
                "saleDate": "2023-02-10",
                "membershipCode": "cO2JskE6",
                "products": [
                    {
                        "name": "Sugar",
                        "quantity": 2,
                        "price": 1.5
                    }
                ],
                "totalAmount": 3,
                "isCancelled": false
            }
        }
    }
}